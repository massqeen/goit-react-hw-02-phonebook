{"version":3,"sources":["components/Container/ContainerStyles.js","components/Container/Container.js","styles/tokens.js","components/ContactList/ContactItem/ContactItemStyles.js","styles/ButtonBasicStyles.js","components/Button.js","components/ContactList/ContactItem/ContactItem.js","styles/ListStyles.js","components/ContactList/ContactListStyles.js","components/ContactList/ContactList.js","components/InputPhone.js","components/ContactEditor/ContactEditorStyles.js","components/ContactEditor/ContactEditor.js","components/Filter.js","components/Stats.js","App.js","index.js"],"names":["ContainerStyled","styled","div","Container","children","tokens","indigo","indigoAccent","green","black","white","Item","li","Text","p","ButtonBasic","button","Button","ContactItem","name","number","id","onDeleteContact","type","onClick","ListStyled","ul","List","ContactList","contacts","map","InputPhone","submitted","onChange","useState","value","setValue","useEffect","defaultCountry","international","withCountryCallingCode","phoneValue","style","marginBottom","Editor","form","Input","input","EditorButton","ContactEditor","onSubmit","setName","setNumber","setSubmitted","e","preventDefault","isValidPhoneNumber","warnText","toast","warning","position","autoClose","setTimeout","target","placeholder","minLength","required","Filter","marginLeft","Stats","totalContacts","visibleContacts","notify","App","initialContacts","setContacts","filter","setFilter","savedContacts","localStorage","getItem","JSON","parse","setItem","stringify","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","totalContactCount","length","visibleContactCount","shortid","generate","duplicated","repeatedContact","find","repeatedNumber","duplicate","Duplicated","prevContacts","currentTarget","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cadd7571.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst ContainerStyled = styled.div`\r\n  max-width: 1440px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nexport default ContainerStyled;\r\n","import PropTypes from 'prop-types';\r\nimport ContainerStyled from './ContainerStyles';\r\n\r\nconst Container = ({ children }) => (\r\n  <ContainerStyled>{children}</ContainerStyled>\r\n);\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Container;\r\n","const tokens = {\r\n  indigo: '#a8c3e6',\r\n  indigoAccent: '#669fe8',\r\n  green: '#4caf50',\r\n  black: '#2a2a2a',\r\n  white: '#fff',\r\n};\r\n\r\nexport default tokens;\r\n","import styled from 'styled-components';\r\nimport tokens from '../../../styles/tokens';\r\n\r\nconst Item = styled.li`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border: 1px solid ${tokens.black};\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  margin-right: 12px;\r\n`;\r\n\r\nexport { Item, Text };\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonBasic = styled.button`\r\n  border: none;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: none;\r\n  margin: 0;\r\n`;\r\n\r\nexport default ButtonBasic;\r\n","import styled from 'styled-components';\r\nimport ButtonBasic from '../styles/ButtonBasicStyles';\r\nimport tokens from '../styles/tokens';\r\n\r\nconst Button = styled(ButtonBasic)`\r\n  margin-left: auto;\r\n  border-radius: 4px;\r\n  padding: 12px 24px;\r\n  background-color: ${tokens.indigo};\r\n  color: ${tokens.white};\r\n  font-weight: 500;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${tokens.indigoAccent};\r\n  }\r\n\r\n  &:active {\r\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.15);\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport { Item, Text } from './ContactItemStyles';\r\nimport Button from '../../Button';\r\n\r\nconst ContactItem = ({ name, number, id = '', onDeleteContact }) => (\r\n  <Item>\r\n    <Text>{name}: </Text>\r\n    <Text>{number}</Text>\r\n    <Button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n      Удалить\r\n    </Button>\r\n  </Item>\r\n);\r\nContactItem.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\nexport default ContactItem;\r\n","import styled from 'styled-components';\r\n\r\nconst ListStyled = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n`;\r\n\r\nexport default ListStyled;\r\n","import styled from 'styled-components';\r\nimport ListStyled from '../../styles/ListStyles';\r\n\r\nconst List = styled(ListStyled)`\r\n  display: grid;\r\n  justify-content: center;\r\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n  grid-gap: 24px;\r\n`;\r\n\r\nexport default List;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem/ContactItem';\r\nimport List from './ContactListStyles';\r\n\r\nconst ContactList = ({ contacts = [], onDeleteContact }) => (\r\n  <List>\r\n    {contacts.map(({ id, name, number }) => {\r\n      return (\r\n        <ContactItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n          id={id}\r\n        />\r\n      );\r\n    })}\r\n  </List>\r\n);\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.array,\r\n};\r\nexport default ContactList;\r\n","import { useState, useEffect } from 'react';\r\nimport 'react-phone-number-input/style.css';\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction InputPhone({ submitted, onChange }) {\r\n  const [value, setValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (submitted) {\r\n      setValue('');\r\n    }\r\n  }, [submitted]);\r\n\r\n  return (\r\n    <PhoneInput\r\n      defaultCountry=\"UA\"\r\n      international={true}\r\n      withCountryCallingCode={true}\r\n      value={value}\r\n      onChange={(phoneValue) => {\r\n        onChange(phoneValue);\r\n        setValue(phoneValue);\r\n      }}\r\n      style={{ marginBottom: '10px' }}\r\n    />\r\n  );\r\n}\r\nInputPhone.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  submitted: PropTypes.bool.isRequired,\r\n};\r\nexport default InputPhone;\r\n","import styled from 'styled-components';\r\nimport tokens from '../../styles/tokens';\r\nimport Button from '../Button';\r\n\r\nconst LH = '16px';\r\n\r\nconst Editor = styled.form`\r\n  width: 600px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  border: 1px solid ${tokens.black};\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px 16px;\r\n  border: 1px solid rgba(33, 33, 33, 0.2);\r\n  border-radius: 4px;\r\n  font: inherit;\r\n  line-height: ${LH};\r\n  letter-spacing: 0.01em;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst EditorButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nexport { Editor, EditorButton, Input };\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { isValidPhoneNumber } from 'react-phone-number-input';\r\nimport InputPhone from '../InputPhone';\r\nimport { Editor, EditorButton, Input } from './ContactEditorStyles';\r\n\r\nconst notify = (warnText) =>\r\n  toast.warning(warnText, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n  });\r\n\r\nconst ContactEditor = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    return setName(value);\r\n  };\r\n\r\n  const handleChangePhone = (value) => setNumber(value);\r\n\r\n  const resetSubmitted = () => {\r\n    setTimeout(() => setSubmitted(false), 1000);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!isValidPhoneNumber(number)) {\r\n      notify(`${number} is not valid phone number`);\r\n      return;\r\n    }\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n    setSubmitted(true);\r\n    resetSubmitted();\r\n  };\r\n\r\n  return (\r\n    <Editor onSubmit={handleSubmit}>\r\n      <Input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={handleChange}\r\n        placeholder={'Имя контакта'}\r\n        name=\"name\"\r\n        minLength=\"2\"\r\n        required\r\n      />\r\n      <InputPhone submitted={submitted} onChange={handleChangePhone} />\r\n      <EditorButton type=\"submit\">Сохранить</EditorButton>\r\n    </Editor>\r\n  );\r\n};\r\n\r\nContactEditor.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default ContactEditor;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value = '', onChange }) => (\r\n  <label>\r\n    Фильтр по имени:\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      style={{ marginLeft: '1em', marginBottom: '1em' }}\r\n    />\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Stats = ({ totalContacts = 0, visibleContacts = 0 }) => (\r\n  <div>\r\n    <p>Всего контактов: {totalContacts}</p>\r\n    <p>Показано контактов: {visibleContacts}</p>\r\n  </div>\r\n);\r\nStats.propTypes = {\r\n  totalContacts: PropTypes.number,\r\n  visibleContacts: PropTypes.number,\r\n};\r\nexport default Stats;\r\n","import { useEffect, useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Container from './components/Container/Container';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport ContactEditor from './components/ContactEditor/ContactEditor';\r\nimport Filter from './components/Filter';\r\nimport initialContacts from './contacts.json';\r\nimport Stats from './components/Stats';\r\n\r\nconst notify = (warnText) =>\r\n  toast.warning(warnText, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n  });\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState(initialContacts);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const savedContacts = localStorage.getItem('contacts');\r\n    savedContacts && setContacts(JSON.parse(savedContacts));\r\n  }, []);\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const Duplicated = (name, number) => {\r\n    const repeatedContact = contacts.find((contact) => contact.name === name);\r\n    const repeatedNumber = contacts.find(\r\n      (contact) => contact.number === number\r\n    );\r\n    let duplicate = null;\r\n    if (repeatedContact) {\r\n      duplicate = 'name';\r\n      return duplicate;\r\n    }\r\n    if (repeatedNumber) {\r\n      duplicate = 'number';\r\n      return duplicate;\r\n    }\r\n    return duplicate;\r\n  };\r\n\r\n  const addContact = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    const duplicated = Duplicated(name, number);\r\n    if (duplicated === 'name') {\r\n      notify(`${name} уже есть в списке контактов`);\r\n      return;\r\n    }\r\n    if (duplicated === 'number') {\r\n      notify(`Номер ${number} уже сохранен в телефонной книге`);\r\n      return;\r\n    }\r\n    setContacts((prevContacts) => [contact, ...prevContacts]);\r\n  };\r\n\r\n  const deleteContact = (contactId) =>\r\n    setContacts((prevState) =>\r\n      prevState.filter((contact) => contact.id !== contactId)\r\n    );\r\n\r\n  const changeFilter = (e) => setFilter(e.currentTarget.value);\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const visibleContacts = getVisibleContacts();\r\n  const totalContactCount = contacts.length;\r\n  const visibleContactCount = visibleContacts.length;\r\n  return (\r\n    <Container>\r\n      <h1>Телефонная книга</h1>\r\n      <Stats\r\n        totalContacts={totalContactCount}\r\n        visibleContacts={visibleContactCount}\r\n      />\r\n      <ContactEditor onSubmit={addContact} />\r\n      {visibleContactCount > 0 && (\r\n        <Filter value={filter} onChange={changeFilter} />\r\n      )}\r\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}